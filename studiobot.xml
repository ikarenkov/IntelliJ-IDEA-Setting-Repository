<application>
  <component name="StudioBotSettings">
    <option name="contextSharingMode" value="ALWAYS_SHARE" />
    <option name="onboardedVersion" value="3" />
    <option name="queryHistory">
      <list>
        <historyEntry timestamp="1714550742808">But how to do it directly inside the modifier?</historyEntry>
        <historyEntry timestamp="1714550701264">But when i move to the other screen and back, then I got a new color for background. But I would like it to be the same</historyEntry>
        <historyEntry timestamp="1714550536919">how to do it from randomBackground?</historyEntry>
        <historyEntry timestamp="1714550452850">Ok, this code works well, but how to provide behavior simmular to rememberSaveable? I want to remember color once</historyEntry>
        <historyEntry timestamp="1714550023725">How to build a new modifier that use random backround color by reusing Modifier.background?</historyEntry>
        <historyEntry timestamp="1714549015003">but i dont need an animation</historyEntry>
        <historyEntry timestamp="1714548988535">why do you use animation here?</historyEntry>
        <historyEntry timestamp="1714548835761">I have a code that uses composed to create Modifier. Can you rewrite it to use new api Modifier.Node?
fun Modifier.randomBackground(
    alpha: Float = 1f
) = composed {
    val backgroundColorInt = rememberSaveable { Random.nextInt() }
    val backgroundColor = remember { Color(backgroundColorInt).copy(alpha = alpha) }
    then(Modifier.background(backgroundColor))
}</historyEntry>
      </list>
    </option>
  </component>
</application>